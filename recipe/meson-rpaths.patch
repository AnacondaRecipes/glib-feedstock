commit fbf87f55d95f132435cae8b7ba78a6022a872317
Author: Isuru Fernando <isuruf@gmail.com>
Date:   Sun Apr 5 23:50:26 2020 +0000

    Fix rpath issue
    
    As per https://github.com/conda-forge/glib-feedstock/issues/40, the new Meson
    build system can cause problems on Linux. When installing executables
    (including shared libraries), Meson edits their RPATHs. When no
    "install_rpath" setting has been configured, Meson removes the RPATH entry.
    First, this can break our executables. Second, historically, the way that
    Meson does so was legal, but ends up altering the file structure in a way
    that a few naive programs can't handle. One of those programs is ldconfig, and
    its confusion can result in it trying to create files with junk names, which
    then confuse downstream tools.
    
    So we the install rpath to something nonempty.
    
    Original author: Peter Williams <peter@newton.cx>

diff --git a/gio/fam/meson.build b/gio/fam/meson.build
index 8019fe5..3485802 100644
--- a/gio/fam/meson.build
+++ b/gio/fam/meson.build
@@ -29,6 +29,7 @@ module = shared_module('giofam', 'gfamfilemonitor.c',
   link_depends : symbol_map,
   install_dir : glib_giomodulesdir,
   install : true,
+  install_rpath: glib_libdir,
 )
 
 if not meson.is_cross_build()
diff --git a/gio/meson.build b/gio/meson.build
index 2ef60ed..34f6052 100644
--- a/gio/meson.build
+++ b/gio/meson.build
@@ -731,6 +731,7 @@ gioenumtypes_h = custom_target('gioenumtypes_h',
   capture : true,
   input : gio_headers,
   install : true,
+  install_rpath: glib_libdir,
   install_dir : join_paths(get_option('includedir'), 'glib-2.0/gio'),
   command : [python, glib_mkenums,
              '--template', files('gioenumtypes.h.template'),
@@ -794,6 +795,7 @@ libgio = library('gio-2.0',
   soversion : soversion,
   darwin_versions : darwin_versions,
   install : true,
+  install_rpath: glib_libdir,
   include_directories : [configinc, gioinc],
   #  '$(gio_win32_res_ldflag)',
   dependencies : [libz_dep, libdl_dep, libmount_dep, libglib_dep,
@@ -920,6 +922,7 @@ gio_tool_sources = [
 
 executable('gio', gio_tool_sources,
   install : true,
+  install_rpath: glib_libdir,
   c_args : gio_c_args,
   # intl.lib is not compatible with SAFESEH
   link_args : noseh_link_args,
@@ -927,12 +930,14 @@ executable('gio', gio_tool_sources,
 
 executable('gresource', 'gresource-tool.c',
   install : true,
+  install_rpath: glib_libdir,
   # intl.lib is not compatible with SAFESEH
   link_args : noseh_link_args,
   dependencies : [libelf, libgio_dep, libgobject_dep, libgmodule_dep, libglib_dep])
 
 gio_querymodules = executable('gio-querymodules', 'gio-querymodules.c', 'giomodule-priv.c',
   install : true,
+  install_rpath: glib_libdir,
   c_args : gio_c_args,
   # intl.lib is not compatible with SAFESEH
   link_args : noseh_link_args,
@@ -941,6 +946,7 @@ gio_querymodules = executable('gio-querymodules', 'gio-querymodules.c', 'giomodu
 glib_compile_schemas = executable('glib-compile-schemas',
   [gconstructor_as_data_h, 'gvdb/gvdb-builder.c', 'glib-compile-schemas.c'],
   install : true,
+  install_rpath: glib_libdir,
   # intl.lib is not compatible with SAFESEH
   link_args : noseh_link_args,
   dependencies : [libgio_dep, libgobject_dep, libgmodule_dep, libglib_dep])
@@ -948,6 +954,7 @@ glib_compile_schemas = executable('glib-compile-schemas',
 glib_compile_resources = executable('glib-compile-resources',
   [gconstructor_as_data_h, 'gvdb/gvdb-builder.c', 'glib-compile-resources.c'],
   install : true,
+  install_rpath: glib_libdir,
   c_args : gio_c_args,
   # intl.lib is not compatible with SAFESEH
   link_args : noseh_link_args,
@@ -963,6 +970,7 @@ endif
 
 executable('gsettings', 'gsettings-tool.c',
   install : true,
+  install_rpath: glib_libdir,
   c_args : gio_c_args,
   # intl.lib is not compatible with SAFESEH
   link_args : noseh_link_args,
@@ -975,6 +983,7 @@ install_data(['gschema.loc', 'gschema.its'],
 
 executable('gdbus', 'gdbus-tool.c',
   install : true,
+  install_rpath: glib_libdir,
   c_args : gio_c_args,
   # intl.lib is not compatible with SAFESEH
   link_args : noseh_link_args,
@@ -983,6 +992,7 @@ executable('gdbus', 'gdbus-tool.c',
 if host_system != 'windows' and not glib_have_cocoa
   executable('gapplication', 'gapplication-tool.c',
     install : true,
+    install_rpath: glib_libdir,
     c_args : gio_c_args,
     # intl.lib is not compatible with SAFESEH
     link_args : noseh_link_args,
diff --git a/glib/meson.build b/glib/meson.build
index aaf5f00..46a7093 100644
--- a/glib/meson.build
+++ b/glib/meson.build
@@ -353,6 +353,7 @@ libglib = library('glib-2.0',
   soversion : soversion,
   darwin_versions : darwin_versions,
   install : true,
+  install_rpath: glib_libdir,
   # intl.lib is not compatible with SAFESEH
   link_args : [noseh_link_args, glib_link_flags, win32_ldflags],
   include_directories : configinc,
@@ -390,22 +391,26 @@ if host_system == 'windows'
   if host_machine.cpu_family() == 'x86'
     executable('gspawn-win32-helper', 'gspawn-win32-helper.c',
       install : true,
+      install_rpath: glib_libdir,
       gui_app : true,
       include_directories : configinc,
       dependencies : [libglib_dep])
     executable('gspawn-win32-helper-console', 'gspawn-win32-helper.c',
       install : true,
+      install_rpath: glib_libdir,
       c_args : ['-DHELPER_CONSOLE'],
       include_directories : configinc,
       dependencies : [libglib_dep])
   else
     executable('gspawn-win64-helper', 'gspawn-win32-helper.c',
       install : true,
+      install_rpath: glib_libdir,
       gui_app : true,
       include_directories : configinc,
       dependencies : [libglib_dep])
     executable('gspawn-win64-helper-console', 'gspawn-win32-helper.c',
       install : true,
+      install_rpath: glib_libdir,
       c_args : ['-DHELPER_CONSOLE'],
       include_directories : configinc,
       dependencies : [libglib_dep])
@@ -413,6 +418,7 @@ if host_system == 'windows'
 else
   gtester = executable('gtester', 'gtester.c',
     install : true,
+    install_rpath: glib_libdir,
     c_args : ['-UG_DISABLE_ASSERT'],
     include_directories : configinc,
     dependencies : [libglib_dep])
diff --git a/gmodule/meson.build b/gmodule/meson.build
index 9801c94..4b5d48a 100644
--- a/gmodule/meson.build
+++ b/gmodule/meson.build
@@ -78,6 +78,7 @@ libgmodule = library('gmodule-2.0',
   soversion : soversion,
   darwin_versions : darwin_versions,
   install : true,
+  install_rpath: glib_libdir,
   include_directories : [configinc, gmoduleinc],
   dependencies : [libdl_dep, libglib_dep],
   c_args : ['-DG_LOG_DOMAIN="GModule"'] + glib_hidden_visibility_args,
diff --git a/gobject/meson.build b/gobject/meson.build
index 85e283b..69de65e 100644
--- a/gobject/meson.build
+++ b/gobject/meson.build
@@ -101,6 +101,7 @@ glib_enumtypes_h = custom_target('glib_enumtypes_h',
   capture : true,
   input : glib_enumtypes_input_headers,
   install : true,
+  install_rpath: glib_libdir,
   install_dir : join_paths(get_option('includedir'), 'glib-2.0/gobject'),
   command : [python, glib_mkenums,
              '--template', files('glib-enumtypes.h.template'),
@@ -124,6 +125,7 @@ libgobject = library('gobject-2.0',
   soversion : soversion,
   darwin_versions : darwin_versions,
   install : true,
+  install_rpath: glib_libdir,
   include_directories : [configinc],
   dependencies : [libffi_dep, libglib_dep],
   c_args : ['-DG_LOG_DOMAIN="GLib-GObject"', '-DGOBJECT_COMPILATION'] + glib_hidden_visibility_args,
@@ -145,6 +147,7 @@ libgobject_dep = declare_dependency(link_with : libgobject,
 
 executable('gobject-query', 'gobject-query.c',
   install : true,
+  install_rpath: glib_libdir,
   dependencies : [libglib_dep, libgobject_dep])
 
 install_data('gobject_gdb.py', install_dir : join_paths(glib_pkgdatadir, 'gdb'))
diff --git a/gthread/meson.build b/gthread/meson.build
index d4fca40..5bfc9c0 100644
--- a/gthread/meson.build
+++ b/gthread/meson.build
@@ -18,6 +18,7 @@ libgthread = library('gthread-2.0',
   soversion : soversion,
   darwin_versions : darwin_versions,
   install : true,
+  install_rpath: glib_libdir,
   dependencies : [libglib_dep],
   c_args : ['-DG_LOG_DOMAIN="GThread"' ] + glib_hidden_visibility_args,
   link_args : glib_link_flags,
